diff -r 63cb9b451885 dom/media/platforms/agnostic/DAV1DDecoder.cpp
--- a/dom/media/platforms/agnostic/DAV1DDecoder.cpp	Mon Nov 01 19:56:45 2021 +0100
+++ b/dom/media/platforms/agnostic/DAV1DDecoder.cpp	Mon Nov 01 20:53:49 2021 +0100
@@ -37,8 +37,13 @@
   } else if (mInfo.mDisplay.width >= 1024) {
     decoder_threads = 4;
   }
-  settings.n_threads =
+  settings.n_frame_threads =
       static_cast<int>(std::min(decoder_threads, GetNumberOfProcessors()));
+  // There is not much improvement with more than 2 tile threads at least with
+  // the content being currently served. The ideal number of tile thread would
+  // much the tile count of the content. Maybe dav1d can help to do that in the
+  // future.
+  settings.n_tile_threads = 2;
 
   int res = dav1d_open(&mContext, &settings);
   if (res < 0) {
diff -r 63cb9b451885 image/decoders/nsAVIFDecoder.cpp
--- a/image/decoders/nsAVIFDecoder.cpp	Mon Nov 01 19:56:45 2021 +0100
+++ b/image/decoders/nsAVIFDecoder.cpp	Mon Nov 01 20:53:49 2021 +0100
@@ -581,7 +581,6 @@
     Dav1dSettings settings;
     dav1d_default_settings(&settings);
     settings.all_layers = 0;
-    settings.max_frame_delay = 1;
     // TODO: tune settings a la DAV1DDecoder for AV1 (Bug 1681816)
 
     return dav1d_open(&mContext, &settings);
