diff --git a/src/linux/mod.rs b/src/linux/mod.rs
index 2ce4122..e230971 100644
--- a/src/linux/mod.rs
+++ b/src/linux/mod.rs
@@ -684,7 +684,7 @@ impl PackageReadout for LinuxPackageReadout {
             packages.push((PackageManager::Apk, c));
         }
 
-        if let Some(c) = LinuxPackageReadout::count_flatpak(&home) {
+        if let Some(c) = LinuxPackageReadout::count_flatpak() {
             packages.push((PackageManager::Flatpak, c));
         }
 
@@ -758,7 +758,9 @@ impl LinuxPackageReadout {
     fn count_portage() -> Option<usize> {
         let pkg_dir = Path::new("/var/db/pkg");
         if pkg_dir.exists() {
-            return Some(walkdir::WalkDir::new(pkg_dir).into_iter().count());
+            return Some(walkdir::WalkDir::new(pkg_dir)
+                        .min_depth(2).max_depth(2)
+                        .into_iter().count());
         }
 
         None
@@ -839,16 +841,21 @@ impl LinuxPackageReadout {
 
     /// Returns the number of installed packages for systems
     /// that have `flatpak` installed.
-    fn count_flatpak(home: &Path) -> Option<usize> {
-        let global_flatpak_dir = Path::new("/var/lib/flatpak/app");
-        let user_flatpak_dir = home.join(".local/share/flatpak/app");
-
-        match (read_dir(global_flatpak_dir), read_dir(user_flatpak_dir)) {
-            (Ok(g), Ok(u)) => Some(g.count() + u.count()),
-            (Ok(g), _) => Some(g.count()),
-            (_, Ok(u)) => Some(u.count()),
-            _ => None,
+    fn count_flatpak() -> Option<usize> {
+        if !extra::which("flatpak") {
+            return None;
         }
+
+        let flatpak_output = Command::new("flatpak")
+            .arg("list")
+            .stdout(Stdio::piped())
+            .output()
+            .unwrap();
+
+        extra::count_lines(
+            String::from_utf8(flatpak_output.stdout)
+                .expect("ERROR: \"flatpak --list\" output was not valid UTF-8"),
+            )
     }
 
     /// Returns the number of installed packages for systems
