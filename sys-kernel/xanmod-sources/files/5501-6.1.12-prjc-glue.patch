diff --git a/kernel/sched/alt_core.c b/kernel/sched/alt_core.c
index a9e906b..ef9db65 100644
--- a/kernel/sched/alt_core.c
+++ b/kernel/sched/alt_core.c
@@ -106,12 +106,12 @@ early_param("sched_timeslice", sched_timeslice);
 #define RESCHED_NS		(100 << 10)
 
 /**
- * sched_yield_type - Choose what sort of yield sched_yield will perform.
+ * sysctl_sched_yield_type - Choose what sort of yield sched_yield will perform.
  * 0: No yield.
  * 1: Deboost and requeue task. (default)
  * 2: Set rq skip task.
  */
-int sched_yield_type __read_mostly = 1;
+int sysctl_sched_yield_type __read_mostly = 1;
 
 #ifdef CONFIG_SMP
 static cpumask_t sched_rq_pending_mask ____cacheline_aligned_in_smp;
@@ -6204,17 +6204,17 @@ static void do_sched_yield(void)
 	struct rq *rq;
 	struct rq_flags rf;
 
-	if (!sched_yield_type)
+	if (!sysctl_sched_yield_type)
 		return;
 
 	rq = this_rq_lock_irq(&rf);
 
 	schedstat_inc(rq->yld_count);
 
-	if (1 == sched_yield_type) {
+	if (1 == sysctl_sched_yield_type) {
 		if (!rt_task(current))
 			do_sched_yield_type_1(current, rq);
-	} else if (2 == sched_yield_type) {
+	} else if (2 == sysctl_sched_yield_type) {
 		if (rq->nr_running > 1)
 			rq->skip = current;
 	}
diff --git a/kernel/sysctl.c b/kernel/sysctl.c
index 2a6b98a..9fa98f7 100644
--- a/kernel/sysctl.c
+++ b/kernel/sysctl.c
@@ -93,10 +93,6 @@ EXPORT_SYMBOL_GPL(sysctl_long_vals);
 
 /* Constants used for minimum and maximum */
 
-#ifdef CONFIG_SCHED_ALT
-extern int sched_yield_type;
-#endif
-
 #ifdef CONFIG_PERF_EVENTS
 static const int six_hundred_forty_kb = 640 * 1024;
 #endif
@@ -1982,17 +1978,6 @@ static struct ctl_table kern_table[] = {
 		.proc_handler	= proc_dointvec,
 	},
 #endif
-#ifdef CONFIG_SCHED_ALT
-	{
-		.procname	= "yield_type",
-		.data		= &sched_yield_type,
-		.maxlen		= sizeof (int),
-		.mode		= 0644,
-		.proc_handler	= &proc_dointvec_minmax,
-		.extra1		= SYSCTL_ZERO,
-		.extra2		= SYSCTL_TWO,
-	},
-#endif
 #if defined(CONFIG_S390) && defined(CONFIG_SMP)
 	{
 		.procname	= "spin_retry",
